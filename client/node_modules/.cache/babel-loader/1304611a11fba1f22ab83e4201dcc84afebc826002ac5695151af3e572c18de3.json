{"ast":null,"code":"var _jsxFileName = \"/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/components/auth/sign-up.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import { useState, useCallback } from 'react';\n// import { withRouter } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\nimport axios from 'axios';\n// import swr from 'swr';\n\n// import { auth } from '../../firebase/config.ts';\nimport Layout from '../shared/layout';\nimport './sign-up.styles.scss';\n\n// const initialValues = {\n//   firstname: 'art',\n//   email: 'test@email.com',\n//   password: '123456'\n// }\n\n// // SWr fetcher\n// const fetcher = (...args) => fetch(...args).then(res => res.json())\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = ({\n  history\n}) => {\n  _s();\n  // const [values, setValues] = useState(initialValues);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  // const { register, handleSubmit, formState: { errors, isSubmitting, isDirty, isValid } } = useForm();\n  // console.log('React app origin:', window.location.origin);\n\n  const onSubmit = useCallback(async data => {\n    try {\n      const serverUri = process.env.REACT_APP_SERVER_URI;\n      const result = await fetch(`${serverUri}/api/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      });\n      console.log('result: ', result);\n      if (!result.ok) throw new Error('Something went wrong');\n      const message = await result.json();\n      console.log('return user: ', message);\n\n      // const firebaseResult = await createUserWithEmailAndPassword(auth, data.email, data.password);\n      // console.log('firebase result: ', firebaseResult)\n\n      history.push('/');\n    } catch (error) {\n      console.error('=== ERROR CAUGHT ===');\n      console.error('Error type:', typeof error);\n      console.error('Error name:', error === null || error === void 0 ? void 0 : error.name);\n      console.error('Error message:', error === null || error === void 0 ? void 0 : error.message);\n      console.error('Full error:', error);\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              autoComplete: \"off\",\n              ...register('firstname', {\n                required: 'The field cannot be empty!',\n                maxLength: {\n                  value: 80,\n                  message: 'First name is too long! Only 80 characters are alowed'\n                },\n                onChange: e => setValues({\n                  ...values,\n                  firstname: e.target.value\n                })\n              }),\n              value: values.firsname,\n              placeholder: \"First Name\",\n              className: `nomad-input ${errors.firstname ? 'error' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              ...register('email', {\n                required: 'Email cannot be emplty!',\n                onChange: e => setValues({\n                  ...values,\n                  email: e.target.value\n                })\n              }),\n              value: values.email,\n              placeholder: \"Email\",\n              className: `nomad-input ${errors.email ? 'email' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              ...register('password', {\n                required: 'Password cannot be empty!',\n                minLength: {\n                  values: 2,\n                  message: 'Password should be at least 2 character or more'\n                }\n              }),\n              placeholder: \"Password\",\n              className: `nomad-input ${errors.password ? 'password' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-black nomad-btn submit\",\n              children: \"SIGN UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"IY8gAsGvQTSrvJLsnSwCs085P6Q=\", false, function () {\n  return [useForm];\n});\n_c = SignUp;\nexport default SignUp;\n// export default withRouter(SignUp)\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useForm","axios","Layout","jsxDEV","_jsxDEV","SignUp","history","_s","register","handleSubmit","formState","errors","onSubmit","useCallback","data","serverUri","process","env","REACT_APP_SERVER_URI","result","fetch","method","headers","body","JSON","stringify","credentials","console","log","ok","Error","message","json","push","error","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","autoComplete","required","maxLength","value","onChange","e","setValues","values","firstname","target","firsname","placeholder","email","minLength","password","_c","$RefreshReg$"],"sources":["/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/components/auth/sign-up.jsx"],"sourcesContent":["import React from 'react';\n// import { useState, useCallback } from 'react';\n// import { withRouter } from 'react-router-dom';\nimport { useForm, } from 'react-hook-form';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\nimport axios from 'axios';\n// import swr from 'swr';\n\n// import { auth } from '../../firebase/config.ts';\nimport Layout from '../shared/layout';\nimport './sign-up.styles.scss';\n\n// const initialValues = {\n//   firstname: 'art',\n//   email: 'test@email.com',\n//   password: '123456'\n// }\n\n// // SWr fetcher\n// const fetcher = (...args) => fetch(...args).then(res => res.json())\n\nconst SignUp = ({ history }) => {\n  // const [values, setValues] = useState(initialValues);\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  // const { register, handleSubmit, formState: { errors, isSubmitting, isDirty, isValid } } = useForm();\n  // console.log('React app origin:', window.location.origin);\n\n  const onSubmit = useCallback(async (data) => {\n    try {\n      const serverUri = process.env.REACT_APP_SERVER_URI;\n      const result = await fetch(`${serverUri}/api/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        credentials: 'include'\n      })\n      console.log('result: ', result)\n      if (!result.ok) throw new Error('Something went wrong');\n      const message = await result.json();\n      console.log('return user: ', message)\n\n      // const firebaseResult = await createUserWithEmailAndPassword(auth, data.email, data.password);\n      // console.log('firebase result: ', firebaseResult)\n\n\n      history.push('/')\n\n    } catch (error) {\n      console.error('=== ERROR CAUGHT ===');\n      console.error('Error type:', typeof error);\n      console.error('Error name:', error?.name);\n      console.error('Error message:', error?.message);\n      console.error('Full error:', error);\n    }\n\n  }, [history])\n\n\n\n\n  return (\n    <Layout>\n      <div className='sign-up'>\n        <h1>Sign Up</h1>\n        <div className='form-container'>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div>\n              <input\n                type='text'\n                autoComplete='off'\n                {...register('firstname', {\n                  required: 'The field cannot be empty!',\n                  maxLength: {\n                    value: 80,\n                    message: 'First name is too long! Only 80 characters are alowed'\n                  },\n                  onChange: (e) => setValues({ ...values, firstname: e.target.value }),\n                })}\n                value={values.firsname}\n                placeholder='First Name'\n                className={`nomad-input ${errors.firstname ? 'error' : ''}`}\n              />\n            </div>\n            <div>\n              <input\n                type=\"email\"\n                {...register('email', {\n                  required: 'Email cannot be emplty!',\n                  onChange: (e) => setValues({ ...values, email: e.target.value })\n                })}\n                value={values.email}\n                placeholder='Email'\n                className={`nomad-input ${errors.email ? 'email' : ''}`}\n              />\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                {...register('password', {\n                  required: 'Password cannot be empty!',\n                  minLength: {\n                    values: 2,\n                    message: 'Password should be at least 2 character or more'\n                  }\n                })}\n                placeholder='Password'\n                className={`nomad-input ${errors.password ? 'password' : ''}`}\n              />\n            </div>\n            <div className='submit-btn'>\n              <button className='button is-black nomad-btn submit'\n              >SIGN UP</button>\n              {/* <button\n                disabled={!isDirty || !isValid || isSubmitting}\n                className='button is-black nomad-btn submit'\n              >SIGN UP</button> */}\n            </div>\n            {/* <div>\n              {\n                errors.firstname && <p>{errors.message}</p>\n              }\n              {\n                errors.email && <p>{errors.message}</p>\n              }\n              {\n                errors.firstname && <p>{errors.message}</p>\n              }\n            </div> */}\n          </form>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SignUp\n// export default withRouter(SignUp)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}