{"ast":null,"code":"var _jsxFileName = \"/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/context/auth.jsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: {},\n  isLoggedIn: false,\n  signin: token => {},\n  signout: () => {}\n});\nfunction retrieveStoredToken() {\n  const token = localStorage.getItem('token');\n  return {\n    token\n  };\n}\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [user] = useState(initialToken);\n  const userIsLoggedIn = !!user;\n  const signinHandler = useCallback(async data => {\n    let isMounted = Boolean(true);\n    const controller = new AbortController();\n    const result = await fetch(`${process.env.REACT_APP_SERVER_URI}/api/signin`, {\n      signal: controller.signal,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    });\n    if (!result.ok) throw new Error('Invalid login');\n    const user = isMounted && (await result.json());\n    console.log('cntx user: ', user);\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, []);\n  const signoutHandler = useCallback(async () => {\n    await fetch(`${process.env.REACT_APP_SERVER_URI}/api/signout`);\n  }, []);\n\n  // useCallback(() => {}, [])\n\n  const contextOptions = {\n    user,\n    isLoggedIn: userIsLoggedIn,\n    signin: signinHandler,\n    signout: signoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextOptions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthContextProvider, \"Vs9W2lWx3k6hqPmUnPsUqZgtjNQ=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["useState","createContext","useCallback","jsxDEV","_jsxDEV","AuthContext","user","isLoggedIn","signin","token","signout","retrieveStoredToken","localStorage","getItem","AuthContextProvider","children","_s","tokenData","initialToken","userIsLoggedIn","signinHandler","data","isMounted","Boolean","controller","AbortController","result","fetch","process","env","REACT_APP_SERVER_URI","signal","method","headers","body","JSON","stringify","credentials","ok","Error","json","console","log","abort","signoutHandler","contextOptions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/context/auth.jsx"],"sourcesContent":["import { useState, createContext, useCallback } from 'react';\n\nconst AuthContext = createContext({\n  user: {},\n  isLoggedIn: false,\n  signin: (token) => { },\n  signout: () => { }\n});\n\nfunction retrieveStoredToken() {\n  const token = localStorage.getItem('token');\n  return { token }\n}\n\nexport const AuthContextProvider = ({ children }) => {\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [user] = useState(initialToken);\n  const userIsLoggedIn = !!user;\n\n  const signinHandler = useCallback(async (data) => {\n    let isMounted = Boolean(true);\n    const controller = new AbortController();\n\n    const result = await fetch(`${process.env.REACT_APP_SERVER_URI}/api/signin`, {\n      signal: controller.signal,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      credentials: 'include'\n    });\n    if (!result.ok) throw new Error('Invalid login');\n    const user = isMounted && await result.json();\n\n    console.log('cntx user: ', user)\n\n    return () => {\n      isMounted = false;\n      controller.abort();\n    }\n  }, []);\n\n  const signoutHandler = useCallback(async () => {\n    await fetch(`${process.env.REACT_APP_SERVER_URI}/api/signout`);\n  }, []);\n\n  // useCallback(() => {}, [])\n\n  const contextOptions = {\n    user,\n    isLoggedIn: userIsLoggedIn,\n    signin: signinHandler,\n    signout: signoutHandler\n  }\n  return <AuthContext.Provider value={contextOptions} >\n    {children}\n  </AuthContext.Provider>\n}\n\nexport default AuthContext;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EAChCK,IAAI,EAAE,CAAC,CAAC;EACRC,UAAU,EAAE,KAAK;EACjBC,MAAM,EAAGC,KAAK,IAAK,CAAE,CAAC;EACtBC,OAAO,EAAEA,CAAA,KAAM,CAAE;AACnB,CAAC,CAAC;AAEF,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,MAAMF,KAAK,GAAGG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO;IAAEJ;EAAM,CAAC;AAClB;AAEA,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,SAAS,GAAGN,mBAAmB,CAAC,CAAC;EACvC,IAAIO,YAAY;EAChB,IAAID,SAAS,EAAE;IACbC,YAAY,GAAGD,SAAS,CAACR,KAAK;EAChC;EACA,MAAM,CAACH,IAAI,CAAC,GAAGN,QAAQ,CAACkB,YAAY,CAAC;EACrC,MAAMC,cAAc,GAAG,CAAC,CAACb,IAAI;EAE7B,MAAMc,aAAa,GAAGlB,WAAW,CAAC,MAAOmB,IAAI,IAAK;IAChD,IAAIC,SAAS,GAAGC,OAAO,CAAC,IAAI,CAAC;IAC7B,MAAMC,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IAExC,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,aAAa,EAAE;MAC3EC,MAAM,EAAEP,UAAU,CAACO,MAAM;MACzBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC;MAC1BgB,WAAW,EAAE;IACf,CAAC,CAAC;IACF,IAAI,CAACX,MAAM,CAACY,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAChD,MAAMjC,IAAI,GAAGgB,SAAS,KAAI,MAAMI,MAAM,CAACc,IAAI,CAAC,CAAC;IAE7CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEpC,IAAI,CAAC;IAEhC,OAAO,MAAM;MACXgB,SAAS,GAAG,KAAK;MACjBE,UAAU,CAACmB,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAG1C,WAAW,CAAC,YAAY;IAC7C,MAAMyB,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,cAAc,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMe,cAAc,GAAG;IACrBvC,IAAI;IACJC,UAAU,EAAEY,cAAc;IAC1BX,MAAM,EAAEY,aAAa;IACrBV,OAAO,EAAEkC;EACX,CAAC;EACD,oBAAOxC,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACC,KAAK,EAAEF,cAAe;IAAA9B,QAAA,EAChDA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AACzB,CAAC;AAAAnC,EAAA,CAhDYF,mBAAmB;AAAAsC,EAAA,GAAnBtC,mBAAmB;AAkDhC,eAAeT,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}