{"ast":null,"code":"var _jsxFileName = \"/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/components/auth/sign-up.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import axiox from 'axios';\n// import swr from 'swr';\n\n// import { auth } from '../../firebase/config.ts';\nimport Layout from '../shared/layout';\nimport './sign-up.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  firstname: 'art',\n  email: 'test@email.com',\n  password: '123456'\n};\n\n// // SWr fetcher\n// const fetcher = (...args) => fetch(...args).then(res => res.json())\n\nconst SignUp = ({\n  history\n}) => {\n  _s();\n  // const [values, setValues] = useState(initialValues);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  // const { register, handleSubmit, formState: { errors, isSubmitting, isDirty, isValid } } = useForm();\n  console.log('React app origin:', window.location.origin);\n\n  // const onSubmit = async (data) => {\n  //   try {\n  //     console.log('form data: ', data)\n  //     const serverUri = process.env.REACT_APP_SERVER_URI;\n  //     console.log('server uri: ', serverUri);\n\n  //     // Remove credentials temporarily\n  //     // const result = await fetch(`https://api.restful-api.dev/objects`);\n\n  //     const result = await fetch(`http://localhost:4000/api/signup`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(initialValues),\n  //       credentials: 'include'\n  //     })\n\n  //     console.log('result: ', result);\n  //     console.log('result.status: ', result.status);\n  //     console.log('result.ok: ', result.ok);\n\n  //     if (!result.ok) throw new Error(`HTTP ${result.status}`);\n  //     const message = await result.json();\n  //     console.log('return user: ', message);\n\n  //     // history.push('/');\n  //   } catch (error) {\n  //     console.error('=== ERROR CAUGHT ===');\n  //     console.error('Full error:', error);\n  //   }\n  // };\n  // const onSubmit = useCallback(async (data) => {\n  //   try {\n  //     const serverUri = process.env.REACT_APP_SERVER_URI;\n  //     console.log('server uri: ', serverUri)\n  //     const result = await fetch(`${serverUri}/api/signup`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(data),\n  //       credentials: 'include'\n  //     })\n  //     console.log('result: ', result)\n  //     if (!result.ok) throw new Error('Something went wrong');\n  //     const message = await result.json();\n  //     console.log('return user: ', message)\n\n  //     // const firebaseResult = await createUserWithEmailAndPassword(auth, data.email, data.password);\n  //     // console.log('firebase result: ', firebaseResult)\n\n  //     history.push('/')\n\n  //   } catch (error) {\n  //     console.error('=== ERROR CAUGHT ===');\n  //     console.error('Error type:', typeof error);\n  //     console.error('Error name:', error?.name);\n  //     console.error('Error message:', error?.message);\n  //     console.error('Full error:', error);\n  //   }\n\n  // }, [history])\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              autoComplete: \"off\",\n              ...register('firstname', {\n                required: 'The field cannot be empty!',\n                maxLength: {\n                  value: 80,\n                  message: 'First name is too long! Only 80 characters are alowed'\n                }\n                // onChange: (e) => setValues({ ...values, firstname: e.target.value }),\n              }),\n              // value={values.firsname}\n              placeholder: \"First Name\",\n              className: `nomad-input ${errors.firstname ? 'error' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              ...register('email', {\n                required: 'Email cannot be emplty!'\n                // onChange: (e) => setValues({ ...values, email: e.target.value })\n              }),\n              // value={values.email}\n              placeholder: \"Email\",\n              className: `nomad-input ${errors.email ? 'email' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              ...register('password', {\n                required: 'Password cannot be empty!',\n                minLength: {\n                  values: 2,\n                  message: 'Password should be at least 2 character or more'\n                }\n              }),\n              placeholder: \"Password\",\n              className: `nomad-input ${errors.password ? 'password' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-black nomad-btn submit\",\n              children: \"SIGN UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n_c = SignUp;\nexport default _c2 = withRouter(SignUp);\nvar _c, _c2;\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["withRouter","useForm","Layout","jsxDEV","_jsxDEV","initialValues","firstname","email","password","SignUp","history","_s","register","handleSubmit","formState","errors","console","log","window","location","origin","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","autoComplete","required","maxLength","value","message","placeholder","minLength","values","_c","_c2","$RefreshReg$"],"sources":["/Users/arthurmelkonyan/webdev/react-ecommerce/client/src/components/auth/sign-up.jsx"],"sourcesContent":["// import { useState, useCallback } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useForm, } from 'react-hook-form';\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import axiox from 'axios';\n// import swr from 'swr';\n\n// import { auth } from '../../firebase/config.ts';\nimport Layout from '../shared/layout';\nimport './sign-up.styles.scss';\n\nconst initialValues = {\n  firstname: 'art',\n  email: 'test@email.com',\n  password: '123456'\n}\n\n// // SWr fetcher\n// const fetcher = (...args) => fetch(...args).then(res => res.json())\n\nconst SignUp = ({ history }) => {\n  // const [values, setValues] = useState(initialValues);\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  // const { register, handleSubmit, formState: { errors, isSubmitting, isDirty, isValid } } = useForm();\n  console.log('React app origin:', window.location.origin);\n\n  // const onSubmit = async (data) => {\n  //   try {\n  //     console.log('form data: ', data)\n  //     const serverUri = process.env.REACT_APP_SERVER_URI;\n  //     console.log('server uri: ', serverUri);\n\n  //     // Remove credentials temporarily\n  //     // const result = await fetch(`https://api.restful-api.dev/objects`);\n\n  //     const result = await fetch(`http://localhost:4000/api/signup`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(initialValues),\n  //       credentials: 'include'\n  //     })\n\n  //     console.log('result: ', result);\n  //     console.log('result.status: ', result.status);\n  //     console.log('result.ok: ', result.ok);\n\n  //     if (!result.ok) throw new Error(`HTTP ${result.status}`);\n  //     const message = await result.json();\n  //     console.log('return user: ', message);\n\n  //     // history.push('/');\n  //   } catch (error) {\n  //     console.error('=== ERROR CAUGHT ===');\n  //     console.error('Full error:', error);\n  //   }\n  // };\n  // const onSubmit = useCallback(async (data) => {\n  //   try {\n  //     const serverUri = process.env.REACT_APP_SERVER_URI;\n  //     console.log('server uri: ', serverUri)\n  //     const result = await fetch(`${serverUri}/api/signup`, {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(data),\n  //       credentials: 'include'\n  //     })\n  //     console.log('result: ', result)\n  //     if (!result.ok) throw new Error('Something went wrong');\n  //     const message = await result.json();\n  //     console.log('return user: ', message)\n\n  //     // const firebaseResult = await createUserWithEmailAndPassword(auth, data.email, data.password);\n  //     // console.log('firebase result: ', firebaseResult)\n\n\n  //     history.push('/')\n\n  //   } catch (error) {\n  //     console.error('=== ERROR CAUGHT ===');\n  //     console.error('Error type:', typeof error);\n  //     console.error('Error name:', error?.name);\n  //     console.error('Error message:', error?.message);\n  //     console.error('Full error:', error);\n  //   }\n\n  // }, [history])\n\n\n\n\n  \n\n  return (\n    <Layout>\n      <div className='sign-up'>\n        <h1>Sign Up</h1>\n        <div className='form-container'>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div>\n              <input\n                type='text'\n                autoComplete='off'\n                {...register('firstname', {\n                  required: 'The field cannot be empty!',\n                  maxLength: {\n                    value: 80,\n                    message: 'First name is too long! Only 80 characters are alowed'\n                  },\n                  // onChange: (e) => setValues({ ...values, firstname: e.target.value }),\n                })}\n                // value={values.firsname}\n                placeholder='First Name'\n                className={`nomad-input ${errors.firstname ? 'error' : ''}`}\n              />\n            </div>\n            <div>\n              <input\n                type=\"email\"\n                {...register('email', {\n                  required: 'Email cannot be emplty!',\n                  // onChange: (e) => setValues({ ...values, email: e.target.value })\n                })}\n                // value={values.email}\n                placeholder='Email'\n                className={`nomad-input ${errors.email ? 'email' : ''}`}\n              />\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                {...register('password', {\n                  required: 'Password cannot be empty!',\n                  minLength: {\n                    values: 2,\n                    message: 'Password should be at least 2 character or more'\n                  }\n                })}\n                placeholder='Password'\n                className={`nomad-input ${errors.password ? 'password' : ''}`}\n              />\n            </div>\n            <div className='submit-btn'>\n              <button className='button is-black nomad-btn submit'\n              >SIGN UP</button>\n              {/* <button\n                disabled={!isDirty || !isValid || isSubmitting}\n                className='button is-black nomad-btn submit'\n              >SIGN UP</button> */}\n            </div>\n            {/* <div>\n              {\n                errors.firstname && <p>{errors.message}</p>\n              }\n              {\n                errors.email && <p>{errors.message}</p>\n              }\n              {\n                errors.firstname && <p>{errors.message}</p>\n              }\n            </div> */}\n          </form>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default withRouter(SignUp)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}